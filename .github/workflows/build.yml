name: build

on:
  push:
    branches:
      - '*'
    tags:
      - '[0-9]*'
      - 'v[0-9]*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
env:
  BUILD_TYPE: Release

jobs:
  build_for_win32:
    runs-on: windows-2019
    steps:
    - name: Set environment
      run: |
        echo platform=x86 >> "${Env:GITHUB_ENV}"
        echo release_arch=Win32 >> "${Env:GITHUB_ENV}"
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Create Build Environment
      working-directory: ${{runner.workspace}}
      run: cmake -E make_directory build
    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: |
       cmake "${Env:GITHUB_WORKSPACE}" -G"Visual Studio 16 2019" -A"${Env:release_arch}" -DCMAKE_BUILD_TYPE="${Env:BUILD_TYPE}" -DCMAKE_CXX_STANDARD=17 -DBASS21_LV2=OFF
    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config "${Env:BUILD_TYPE}" -j 2
    - uses: actions/upload-artifact@v2
      with:
        name: Win32 VST3
        path: "${{runner.workspace}}/build/*_artefacts/${{env.BUILD_TYPE}}/VST3/*.vst3"

  build_for_win64:
    runs-on: windows-2019
    steps:
    - name: Set environment
      run: |
        echo platform=x64 >> "${Env:GITHUB_ENV}"
        echo release_arch=x64 >> "${Env:GITHUB_ENV}"
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Create Build Environment
      working-directory: ${{runner.workspace}}
      run: cmake -E make_directory build
    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: |
       cmake "${Env:GITHUB_WORKSPACE}" -G"Visual Studio 16 2019" -A"${Env:release_arch}" -DCMAKE_BUILD_TYPE="${Env:BUILD_TYPE}" -DCMAKE_CXX_STANDARD=17 -DBASS21_LV2=OFF
    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config "${Env:BUILD_TYPE}" -j 2
    - uses: actions/upload-artifact@v2
      with:
        name: Win64 VST3
        path: "${{runner.workspace}}/build/*_artefacts/${{env.BUILD_TYPE}}/VST3/*.vst3"

  build_for_macos:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Create Build Environment
      working-directory: ${{runner.workspace}}
      run: cmake -E make_directory build
    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: |
       cmake "${GITHUB_WORKSPACE}" -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" -DCMAKE_CXX_STANDARD=17 -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -DBASS21_LV2=OFF
    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config "${BUILD_TYPE}" -j 2
    - name: Print file list
      working-directory: ${{runner.workspace}}/build
      run: ls -lR
    - uses: actions/upload-artifact@v2
      with:
        name: macOS VST3
        path: "${{runner.workspace}}/build/*_artefacts/${{env.BUILD_TYPE}}/VST3/*.vst3"
    - uses: actions/upload-artifact@v2
      with:
        name: macOS AU
        path: "${{runner.workspace}}/build/*_artefacts/${{env.BUILD_TYPE}}/AU/*.component"

  build_for_mod:
    runs-on: ubuntu-20.04
    container:
      image: jpcima/mod-plugin-builder:modduo
      options: --user 0
    steps:
    - name: Fix up MOD environment
      shell: bash
      run: ln -sf /home/builder/mod-workdir ~/mod-workdir
    - name: Update git
      shell: bash
      run: |
        sudo apt-get -y update
        sudo apt-get -y install software-properties-common
        sudo add-apt-repository -y ppa:git-core/ppa
        sudo apt-get -y update
        sudo apt-get -y install git
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Create Build Environment
      shell: bash
      working-directory: ${{runner.workspace}}
      run: |
        pushd /home/builder/mod-plugin-builder && . local.env modduo && popd && \
          cmake -E make_directory build
    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        pushd /home/builder/mod-plugin-builder && . local.env modduo && popd && \
          cmake "${GITHUB_WORKSPACE}" -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" -DCMAKE_CXX_STANDARD=17 -DBASS21_JUCE=OFF
    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        pushd /home/builder/mod-plugin-builder && . local.env modduo && popd && \
          cmake --build . --config "${BUILD_TYPE}" -- -j 2
    - name: Print file list
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ls -lR
    - uses: actions/upload-artifact@v2
      with:
        name: MOD LV2
        path: "${{runner.workspace}}/build/LV2/*.lv2"
